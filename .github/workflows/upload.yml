name: Download and Process Music

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'ダウンロードするURLを入力'
        required: true
        type: string
      scrape_internal_links:
        description: '内部リンクをスクレイピングしますか？'
        required: true
        type: boolean
        default: false
      source_type:
        description: 'ダウンロード元の種類'
        required: true
        type: choice
        options:
          - auto_detect
          - soundcloud
          - bandcamp
          - archive
          - direct_link
        default: auto_detect

jobs:
  download:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Gitの設定
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: 必要なパッケージをインストール
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg wget nodejs npm

      - name: Pythonをセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Pythonの依存関係をインストール
        run: |
          python -m pip install --upgrade pip
          pip install yt-dlp requests beautifulsoup4 setuptools wheel

      - name: downloadsディレクトリの作成
        run: mkdir -p downloads/filtered

      - name: 音楽をダウンロード
        env:
          INPUT_URL: ${{ github.event.inputs.url }}
          INPUT_SCRAPE_LINKS: ${{ github.event.inputs.scrape_internal_links }}
          INPUT_SOURCE_TYPE: ${{ github.event.inputs.source_type }}
        run: |
          set +e
          python downloader.py "$INPUT_URL" "$INPUT_SCRAPE_LINKS" "$INPUT_SOURCE_TYPE"

      - name: 音楽ファイルをGitに追加 & プッシュ
        run: |
          set +e
          # 音楽ファイルを検索して追加
          files_added=false
          find downloads/filtered -type f \( -name "*.mp3" -o -name "*.wav" -o -name "*.flac" -o -name "*.m4a" \) | while read file; do
            echo "🎵 追加するファイル: $file"
            git add "$file"
            files_added=true
          done

          # 変更があった場合のみコミットとプッシュを実行
          if [ "$files_added" = true ]; then
            git commit -m "🎵 新しい音楽ファイルを追加: [skip ci]"
            git pull --rebase origin main || true
            git push origin HEAD:main || true
          else
            echo "⚠️ 変更がないためコミットをスキップ"
          fi
