name: Download Music Tracks
on:
  workflow_dispatch:
    inputs:
      url:
        description: 'ダウンロードするURLを入力'
        required: true
        type: string
      folder_name:
        description: 'Torrent内の対象フォルダ名'
        required: false
        type: string
      scrape_internal_links:
        description: '内部リンクをスクレイピングしますか？'
        required: true
        type: boolean
        default: false
      source_type:
        description: 'ダウンロード元の種類'
        required: true
        type: choice
        options:
          - auto_detect
          - soundcloud
          - bandcamp
          - archive
          - direct_link
          - torrent
        default: auto_detect
jobs:
  download:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Gitの設定
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: 必要なパッケージをインストール
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg aria2
          pip install yt-dlp requests beautifulsoup4
      
      - name: downloadsディレクトリの作成
        run: mkdir -p downloads/torrents
      
      - name: Torrentをダウンロードして展開
        if: ${{ github.event.inputs.source_type == 'torrent' }}
        env:
          INPUT_URL: ${{ github.event.inputs.url }}
          INPUT_FOLDER_NAME: ${{ github.event.inputs.folder_name }}
        run: |
          if [[ "$INPUT_URL" == magnet:* ]]; then
            aria2c --dir=downloads --seed-time=0 "$INPUT_URL"
          elif [[ "$INPUT_URL" == *.torrent ]]; then
            wget -O "downloads/torrents/music.torrent" "$INPUT_URL"
            aria2c --dir=downloads --seed-time=0 "downloads/torrents/music.torrent"
          else
            echo "⚠️ 無効なTorrent URL"
            exit 1
          fi
      
      - name: 指定フォルダのMP3のみを取得
        if: ${{ github.event.inputs.source_type == 'torrent' && github.event.inputs.folder_name != '' }}
        env:
          INPUT_FOLDER_NAME: ${{ github.event.inputs.folder_name }}
        run: |
          TARGET_DIR=$(find downloads -type d -name "$INPUT_FOLDER_NAME" -print -quit)
          if [[ -d "$TARGET_DIR" ]]; then
            mkdir -p downloads/filtered
            find "$TARGET_DIR" -type f -name "*.mp3" -exec mv {} downloads/filtered/ \;
          else
            echo "⚠️ 指定フォルダが見つかりません"
            exit 1
          fi
      
      - name: その他のソースから音楽をダウンロード
        if: ${{ github.event.inputs.source_type != 'torrent' }}
        env:
          INPUT_URL: ${{ github.event.inputs.url }}
          INPUT_SCRAPE_LINKS: ${{ github.event.inputs.scrape_internal_links }}
          INPUT_SOURCE_TYPE: ${{ github.event.inputs.source_type }}
        run: |
          python downloader.py "$INPUT_URL" "$INPUT_SCRAPE_LINKS" "$INPUT_SOURCE_TYPE"
      
      - name: Gitに追加・プッシュ
        run: |
          IFS=$'\n' read -d '' -r -a MUSIC_FILES < <(find downloads -type f \( -name "*.mp3" -o -name "*.wav" -o -name "*.flac" -o -name "*.m4a" \) && printf '\0')
          if [ ${#MUSIC_FILES[@]} -gt 0 ]; then
            for file in "${MUSIC_FILES[@]}"; do
              git add "$file"
            done
            git commit -m "🎵 新しい音楽ファイルを追加 [skip ci]" || echo "No changes to commit"
            git pull --rebase origin main
            git push origin HEAD:main
          else
            echo "⚠️ 音楽ファイルが見つかりません"
            exit 1
